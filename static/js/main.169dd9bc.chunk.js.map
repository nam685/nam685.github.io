{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","xIsNext","squares","Array","fill","i","this","handleClick","slice","calculateWinner","setState","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"wNAIA,SAASA,EAAQC,GACb,OACI,wBAAQC,UAAU,SAASC,QAAS,kBAAMF,EAAME,WAAhD,SACKF,EAAMG,Q,IAKbC,E,kDACF,WAAYJ,GAAQ,IAAD,8BACf,cAAMA,IACDK,MAAQ,CACTC,SAAS,EACTC,QAASC,MAAM,GAAGC,KAAK,OAJZ,E,gDAQnB,SAAaC,GAAI,IAAD,OACZ,OAAO,cAACX,EAAD,CACHI,MAAOQ,KAAKN,MAAME,QAAQG,GAC1BR,QAAS,kBAAM,EAAKU,YAAYF,Q,yBAIxC,SAAYA,GACR,IAAMH,EAAUI,KAAKN,MAAME,QAAQM,QAC/BN,EAAQG,IAAMI,EAAgBP,KAClCA,EAAQG,GAAKC,KAAKN,MAAMC,QAAU,IAAM,IACxCK,KAAKI,SAAS,CAAET,SAAUK,KAAKN,MAAMC,QAASC,QAASA,O,oBAG3D,WACI,IACIS,EADEC,EAASH,EAAgBH,KAAKN,MAAME,SAQ1C,OALIS,EADAC,EACS,WAAaA,EAEb,iBAAmBN,KAAKN,MAAMC,QAAU,IAAM,KAIvD,gCACI,qBAAKL,UAAU,SAAf,SAAyBe,IACzB,sBAAKf,UAAU,YAAf,UACKU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAEvB,sBAAKjB,UAAU,YAAf,UACKU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAEvB,sBAAKjB,UAAU,YAAf,UACKU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,a,GAhDnBC,IAAMC,WAuDpBC,E,4JACF,WACI,OACI,sBAAKpB,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAACG,EAAD,MAEJ,sBAAKH,UAAU,YAAf,UACI,wBACA,iC,GATDkB,IAAMC,WAuBzB,SAASN,EAAgBP,GAWrB,IAVA,IAAMe,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CACnC,kBAAkBY,EAAMZ,GAAxB,GAAOc,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAInB,EAAQiB,IAAMjB,EAAQiB,KAAOjB,EAAQkB,IAAMlB,EAAQiB,KAAOjB,EAAQmB,GAClE,OAAOnB,EAAQiB,GAGvB,OAAO,KAtBXG,IAASC,OACL,cAACP,EAAD,IACAQ,SAASC,eAAe,W","file":"static/js/main.169dd9bc.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square (props) {\r\n    return (\r\n        <button className=\"square\" onClick={() => props.onClick()}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            xIsNext: true,\r\n            squares: Array(9).fill(null),\r\n        };\r\n    }\r\n\r\n    renderSquare(i) {\r\n        return <Square\r\n            value={this.state.squares[i]}\r\n            onClick={() => this.handleClick(i)}\r\n        />;\r\n    }\r\n\r\n    handleClick(i) {\r\n        const squares = this.state.squares.slice();\r\n        if (squares[i] || calculateWinner(squares)) return;\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({ xIsNext: !this.state.xIsNext, squares: squares });\r\n    }\r\n\r\n    render() {\r\n        const winner = calculateWinner(this.state.squares)\r\n        let status;\r\n        if (winner) {\r\n            status = \"Winner: \" + winner\r\n        } else {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"status\">{status}</div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{/* status */}</div>\r\n                    <ol>{/* TODO */}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}"],"sourceRoot":""}