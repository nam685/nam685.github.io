{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","style","fontWeight","jumpTo","toUpperCase","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e2a2b56.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square (props) {\r\n    return (\r\n        <button className=\"square\" onClick={() => props.onClick()}> {props.value} </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return <Square\r\n            value={this.props.squares[i]}\r\n            onClick={() => this.props.onClick(i)}\r\n        />;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            xIsNext: true,\r\n            stepNumber: 0,\r\n        }\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber+1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (squares[i] || calculateWinner(squares)) return;\r\n        squares[i] = this.state.xIsNext ? 'x' : 'o';\r\n        this.setState({\r\n            xIsNext: !this.state.xIsNext,\r\n            stepNumber: history.length,\r\n            history: history.concat([{\r\n                squares: squares,\r\n            }]),\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: step % 2 === 0\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n                'Go to move #' + move :\r\n                'Go to game start';\r\n            return (\r\n                <li key={move}>\r\n                    <button\r\n                        style={move === this.state.stepNumber ? { fontWeight: 'bold' } : { fontWeight: 'normal' }}\r\n                        onClick={() => { this.jumpTo(move) }}\r\n                    >\r\n                        {desc}\r\n                    </button>\r\n                </li>\r\n            )\r\n        })\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = \"Winner: \" + winner[0]\r\n            for (let i = 1; i < 4; i++) {\r\n                current.squares[winner[i]] = current.squares[winner[i]].toUpperCase();\r\n            }\r\n        } else {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        onClick={(i) => this.handleClick(i)}\r\n                        squares={current.squares}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return [squares[a], a, b, c];\r\n        }\r\n    }\r\n    return null;\r\n}"],"sourceRoot":""}